name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Checkout
        uses: actions/checkout@v2

      - name: poetry install
        uses: snok/install-poetry@v1

      - name: packages install
        run: poetry install

      - name: run pytest with reports
        run: poetry run pytest tests/ --cov=pycricketpred --cov-report=xml

      - name: see coverage
        uses: codecov/codecov-action@v2
        with: 
          file: ./coverage.xml

      - name: documentation
        run: poetry run make html --directory docs/

  cd: 
    permissions: 
      id-token: write
      contents: write 

    needs: ci

    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    steps:
      - name: install python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: prepare release
        id: release
        uses: python-semantic-release/python-semantic-release@v8.3.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Test install from TestPyPI
        run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            pycricketpred

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      




  